// <auto-generated />
using System;
using BusStationIS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BusStationIS.Data.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    partial class ApplicationDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BusStationIS.Data.Models.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("StreetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StreetNumber")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("BusStationIS.Data.Models.BusStation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("BusStations");
                });

            modelBuilder.Entity("BusStationIS.Data.Models.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DepartureId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartureId");

                    b.HasIndex("UserId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("BusStationIS.Data.Models.Carrier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("Carriers");
                });

            modelBuilder.Entity("BusStationIS.Data.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("BusStationIS.Data.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BusStationId")
                        .HasColumnType("int");

                    b.Property<int?>("CarrierId")
                        .HasColumnType("int");

                    b.Property<string>("ContactContent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BusStationId");

                    b.HasIndex("CarrierId");

                    b.HasIndex("PersonId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("BusStationIS.Data.Models.Departure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CarrierId")
                        .HasColumnType("int");

                    b.Property<int?>("CityFromId")
                        .HasColumnType("int");

                    b.Property<int?>("CityToId")
                        .HasColumnType("int");

                    b.Property<int?>("DistanceId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfSeats")
                        .HasColumnType("int");

                    b.Property<int?>("PaymentCategoryId")
                        .HasColumnType("int");

                    b.Property<double>("PriceOfCard")
                        .HasColumnType("float");

                    b.Property<int?>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarrierId");

                    b.HasIndex("CityFromId");

                    b.HasIndex("CityToId");

                    b.HasIndex("DistanceId");

                    b.HasIndex("PaymentCategoryId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Departures");
                });

            modelBuilder.Entity("BusStationIS.Data.Models.Distance", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CityFromId")
                        .HasColumnType("int");

                    b.Property<int?>("CityToId")
                        .HasColumnType("int");

                    b.Property<int>("DistanceBetween")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CityFromId");

                    b.HasIndex("CityToId");

                    b.ToTable("Distances");
                });

            modelBuilder.Entity("BusStationIS.Data.Models.PaymentCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("PaymentCategories");
                });

            modelBuilder.Entity("BusStationIS.Data.Models.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AddressId")
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AddressId");

                    b.ToTable("People");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Person");
                });

            modelBuilder.Entity("BusStationIS.Data.Models.SpecificallyDeparture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DepartureId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartureId");

                    b.ToTable("SpecificallyDepartures");
                });

            modelBuilder.Entity("BusStationIS.Data.Models.UserCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("DiscountPercent")
                        .HasColumnType("float");

                    b.Property<string>("NameOfCategory")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserCategories");
                });

            modelBuilder.Entity("BusStationIS.Data.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Available")
                        .HasColumnType("bit");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<int?>("CarrierId")
                        .HasColumnType("int");

                    b.Property<string>("RegistrationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CarrierId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("BusStationIS.Data.Models.User", b =>
                {
                    b.HasBaseType("BusStationIS.Data.Models.Person");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("MemberSince")
                        .HasColumnType("datetime2");

                    b.HasIndex("CategoryId");

                    b.HasDiscriminator().HasValue("User");
                });

            modelBuilder.Entity("BusStationIS.Data.Models.Address", b =>
                {
                    b.HasOne("BusStationIS.Data.Models.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");
                });

            modelBuilder.Entity("BusStationIS.Data.Models.BusStation", b =>
                {
                    b.HasOne("BusStationIS.Data.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");
                });

            modelBuilder.Entity("BusStationIS.Data.Models.Card", b =>
                {
                    b.HasOne("BusStationIS.Data.Models.Departure", null)
                        .WithMany("Cards")
                        .HasForeignKey("DepartureId");

                    b.HasOne("BusStationIS.Data.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("BusStationIS.Data.Models.Carrier", b =>
                {
                    b.HasOne("BusStationIS.Data.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");
                });

            modelBuilder.Entity("BusStationIS.Data.Models.Contact", b =>
                {
                    b.HasOne("BusStationIS.Data.Models.BusStation", null)
                        .WithMany("Contacts")
                        .HasForeignKey("BusStationId");

                    b.HasOne("BusStationIS.Data.Models.Carrier", null)
                        .WithMany("Contacts")
                        .HasForeignKey("CarrierId");

                    b.HasOne("BusStationIS.Data.Models.Person", null)
                        .WithMany("Contacts")
                        .HasForeignKey("PersonId");
                });

            modelBuilder.Entity("BusStationIS.Data.Models.Departure", b =>
                {
                    b.HasOne("BusStationIS.Data.Models.Carrier", "Carrier")
                        .WithMany()
                        .HasForeignKey("CarrierId");

                    b.HasOne("BusStationIS.Data.Models.City", "CityFrom")
                        .WithMany()
                        .HasForeignKey("CityFromId");

                    b.HasOne("BusStationIS.Data.Models.City", "CityTo")
                        .WithMany()
                        .HasForeignKey("CityToId");

                    b.HasOne("BusStationIS.Data.Models.Distance", "Distance")
                        .WithMany()
                        .HasForeignKey("DistanceId");

                    b.HasOne("BusStationIS.Data.Models.PaymentCategory", "PaymentCategory")
                        .WithMany()
                        .HasForeignKey("PaymentCategoryId");

                    b.HasOne("BusStationIS.Data.Models.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId");
                });

            modelBuilder.Entity("BusStationIS.Data.Models.Distance", b =>
                {
                    b.HasOne("BusStationIS.Data.Models.City", "CityFrom")
                        .WithMany()
                        .HasForeignKey("CityFromId");

                    b.HasOne("BusStationIS.Data.Models.City", "CityTo")
                        .WithMany()
                        .HasForeignKey("CityToId");
                });

            modelBuilder.Entity("BusStationIS.Data.Models.Person", b =>
                {
                    b.HasOne("BusStationIS.Data.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressId");
                });

            modelBuilder.Entity("BusStationIS.Data.Models.SpecificallyDeparture", b =>
                {
                    b.HasOne("BusStationIS.Data.Models.Departure", "Departure")
                        .WithMany()
                        .HasForeignKey("DepartureId");
                });

            modelBuilder.Entity("BusStationIS.Data.Models.Vehicle", b =>
                {
                    b.HasOne("BusStationIS.Data.Models.Carrier", null)
                        .WithMany("Vehicles")
                        .HasForeignKey("CarrierId");
                });

            modelBuilder.Entity("BusStationIS.Data.Models.User", b =>
                {
                    b.HasOne("BusStationIS.Data.Models.UserCategory", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId");
                });
#pragma warning restore 612, 618
        }
    }
}
